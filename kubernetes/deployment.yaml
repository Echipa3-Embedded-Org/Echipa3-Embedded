apiVersion: v1
kind: Namespace
metadata:
  name: ss
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodered-deployment
  namespace: ss
spec:
  selector:
    matchLabels:
      app: nodered
  replicas: 1
  template:
    metadata:
      labels:
        app: nodered
    spec:
      containers:
      - name: nodered
        image: 2001slavic/ss-nodered:latest
        imagePullPolicy: Always
        ports:
        - name: nodered-port
          containerPort: 1880
        volumeMounts:
        - name: nodered-data
          mountPath: /data
        - name: nodered-images
          mountPath: /data/images
        - name: nodered-certs
          mountPath: /certs
          readOnly: true
      volumes:
        - name: nodered-certs
          secret:
            secretName: nodered-certs
        - name: nodered-data
          persistentVolumeClaim:
            claimName: nodered-pvc
        - name: nodered-images
          hostPath:
            path: /mnt/ss-proiect/Node-Red/images
            type: DirectoryOrCreate

      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: nodered-service
  namespace: ss
spec:
  type: NodePort
  selector:
    app: nodered
  ports:
  - port: 30000
    targetPort: nodered-port
    nodePort: 30000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nodered-pvc
  namespace: ss
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-config
data:
  mosquitto.conf: |
    # Don't allow unauthenticated users
    allow_anonymous false
    # Port to listen on 
    listener 8883
    # Uses the common name from the client cert as the username
    use_identity_as_username true
    # Path the the Certificate Authority Cert.
    cafile /mosquitto/certs/ca.crt
    # Path to server private key
    keyfile /mosquitto/certs/server.key
    # Path to server certificate
    certfile /mosquitto/certs/server.crt
    # Set TLS version
    tls_version tlsv1.2
    # Require that clients provide certificates
    require_certificate true
    log_type all
    log_dest file /mosquitto/log/mosquitto.log
    persistence_location /mosquitto/data/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mosquitto-deployment
  namespace: ss
spec:
  selector:
    matchLabels:
      app: mosquitto
  replicas: 1
  template:
    metadata:
      labels:
        app: mosquitto
    spec:
      containers:
      - name: mosquitto
        image: eclipse-mosquitto:2.0.21
        imagePullPolicy: Always
        ports:
        - name: mosquitto-port
          containerPort: 8883
        volumeMounts:
        - name: mosquitto-data
          mountPath: /mosquitto/data
        - name: mosquitto-certs
          mountPath: /mosquitto/certs
          readOnly: true
        - name: mosquitto-log
          mountPath: /mosquitto/log
          readOnly: true
          
      volumes:
      - name: mosquitto-data
        persistentVolumeClaim:
          claimName: mosquitto-pvc
      - name: mosquitto-certs
        secret:
          secretName: mosquitto-certificates
      - name: mosquitto-log
        hostPath:
          path: /mnt/ss-proiect/mosquitto/images
          type: DirectoryOrCreate

      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: mosquitto-service
  namespace: ss
spec:
  type: NodePort
  selector:
    app: mosquitto
  ports:
  - port: 30001
    targetPort: mosquitto-port
    nodePort: 30001
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nodered-pvc
  namespace: ss
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mosquitto-pvc
  namespace: ss
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
